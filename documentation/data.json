{
    "project": {
        "name": "yocto-logger",
        "description": "Logger utility for yocto core stack based on winston",
        "version": "0.1.1",
        "url": "http://www.yocto.re"
    },
    "files": {
        "src/index.js": {
            "name": "src/index.js",
            "modules": {},
            "classes": {
                "Logger": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "Logger": {
            "name": "Logger",
            "shortname": "Logger",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/index.js",
            "line": 20,
            "description": "Yocto logger manager. Manage your own logger request\n\n\nA custom logger wrapper based on winston for nodejs\n\nFor more details on these dependencies read links below :\n- Winston : https://github.com/flatiron/winston\n- LodAsh : https://lodash.com/\n- Chalk : https://www.npmjs.com/package/chalk\n- momentjs : http://momentjs.com/\n- string-format : https://www.npmjs.com/package/string-format\n- uuid : https://www.npmjs.com/package/uuid\n- fs : https://nodejs.org/api/fs.html\n- path : https://nodejs.org/api/path.html\n- events : https://nodejs.org/api/events.html\n- util : https://nodejs.org/api/util.html\n\nBy default a console is configured with default options (cf winston documentation for more details)\nPossibility to use the logger with these levels :\n - error\n - warning\n - info\n - debug\n - verbose\n\nA Banner function is available to display on console.log a more significant message.\n\nFor each examples, please read file on example directory.",
            "date": ": 21/04/2015",
            "author": ": Mathieu ROBERT <mathieu@yocto.re>",
            "copyright": ": Yocto SAS, All right reserved"
        }
    },
    "classitems": [
        {
            "file": "src/index.js",
            "line": 56,
            "description": "Default log level",
            "itemtype": "property",
            "name": "logLevel",
            "type": "Integer",
            "default": "5",
            "class": "Logger"
        },
        {
            "file": "src/index.js",
            "line": 64,
            "description": "Default const to define console type\nsee : https://www.npmjs.com/package/winston#console-transport",
            "itemtype": "property",
            "name": "TYPE_CONSOLE",
            "type": "String",
            "default": "console",
            "class": "Logger"
        },
        {
            "file": "src/index.js",
            "line": 74,
            "description": "Default const to define daily rotate file \nsee : https://www.npmjs.com/package/winston#daily-rotate-file-transport",
            "itemtype": "property",
            "name": "TYPE_DAILY_ROTATE_FILE",
            "type": "String",
            "default": "console",
            "class": "Logger"
        },
        {
            "file": "src/index.js",
            "line": 84,
            "description": "Default const to define error log level rules on current class",
            "itemtype": "property",
            "name": "ERROR_LOG_LEVEL",
            "type": "Object",
            "class": "Logger"
        },
        {
            "file": "src/index.js",
            "line": 92,
            "description": "Default const to define warning log level rules on current class",
            "itemtype": "property",
            "name": "WARNING_LOG_LEVEL",
            "type": "Object",
            "class": "Logger"
        },
        {
            "file": "src/index.js",
            "line": 100,
            "description": "Default const to define info log level rules on current class",
            "itemtype": "property",
            "name": "INFO_LOG_LEVEL",
            "type": "Object",
            "class": "Logger"
        },
        {
            "file": "src/index.js",
            "line": 108,
            "description": "Default const to define debug log level rules on current class",
            "itemtype": "property",
            "name": "DEBUG_LOG_LEVEL",
            "type": "Object",
            "class": "Logger"
        },
        {
            "file": "src/index.js",
            "line": 116,
            "description": "Default const to define verbose log level rules on current class",
            "itemtype": "property",
            "name": "VERBOSE_LOG_LEVEL",
            "type": "Object",
            "class": "Logger"
        },
        {
            "file": "src/index.js",
            "line": 125,
            "description": "Default formatter. use all data to render the correct message format to the logger formatter",
            "itemtype": "method",
            "name": "transportFormatter",
            "params": [
                {
                    "name": "default",
                    "description": "default options to use",
                    "type": "Object"
                },
                {
                    "name": "colorize",
                    "description": "if true enable colorize process, false otherwise",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "the correct string to use on current transporter",
                "type": "String"
            },
            "class": "Logger"
        },
        {
            "file": "src/index.js",
            "line": 185,
            "description": "Default function to get a current date format",
            "itemtype": "method",
            "name": "timestamp",
            "return": {
                "description": "formated string based on moment.js format",
                "type": "String"
            },
            "class": "Logger"
        },
        {
            "file": "src/index.js",
            "line": 195,
            "description": "Default label function to retrive the correct label to display on logger",
            "itemtype": "method",
            "name": "labelFormatter",
            "params": [
                {
                    "name": "value",
                    "description": "value to check",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the correct value to display",
                "type": "String"
            },
            "class": "Logger"
        },
        {
            "file": "src/index.js",
            "line": 223,
            "description": "Default function to colorize the log level with chalk",
            "itemtype": "method",
            "name": "colorize",
            "params": [
                {
                    "name": "(String)",
                    "description": "level current level to use"
                }
            ],
            "return": {
                "description": "(String) current color to use on chalk"
            },
            "class": "Logger"
        },
        {
            "file": "src/index.js",
            "line": 251,
            "description": "Default console formatter. use all data to render the correct message format to the logger formatter",
            "itemtype": "method",
            "name": "consoleTransportFormatter",
            "params": [
                {
                    "name": "options",
                    "description": "default options to use",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the correct string to use on current transporter",
                "type": "String"
            },
            "class": "Logger"
        },
        {
            "file": "src/index.js",
            "line": 262,
            "description": "Default daily rotate file formatter. use all data to render the correct message format to the logger formatter",
            "itemtype": "method",
            "name": "dailyRotateFileTransportFormatter",
            "params": [
                {
                    "name": "options",
                    "description": "default options to use",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the correct string to use on current transporter",
                "type": "String"
            },
            "class": "Logger"
        },
        {
            "file": "src/index.js",
            "line": 273,
            "description": "Default console transport",
            "itemtype": "property",
            "name": "defaultConsoleTransport",
            "type": "Object",
            "class": "Logger"
        },
        {
            "file": "src/index.js",
            "line": 291,
            "description": "Default daily rotate transport file",
            "itemtype": "property",
            "name": "defaultDailyRotateTransportFile",
            "type": "Object",
            "class": "Logger"
        },
        {
            "file": "src/index.js",
            "line": 313,
            "description": "Default winston instance logger",
            "itemtype": "property",
            "name": "winston",
            "type": "Object",
            "class": "Logger"
        },
        {
            "file": "src/index.js",
            "line": 331,
            "description": "Wrapper function to enable log on console",
            "params": [
                {
                    "name": "status",
                    "description": "true if we need to enable false otherwise",
                    "type": "Boolean"
                }
            ],
            "class": "Logger"
        },
        {
            "file": "src/index.js",
            "line": 357,
            "description": "Wrapper function to disable log on console",
            "class": "Logger"
        },
        {
            "file": "src/index.js",
            "line": 368,
            "description": "Success function for emit event. catch all success for call process",
            "params": [
                {
                    "name": "callback",
                    "description": "callback to use success event",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "current instance",
                "type": "Object"
            },
            "class": "Logger"
        },
        {
            "file": "src/index.js",
            "line": 386,
            "description": "Success function for emit event. catch all failure for call process",
            "params": [
                {
                    "name": "callback",
                    "description": "callback to use failure event",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "current instance",
                "type": "Object"
            },
            "class": "Logger"
        },
        {
            "file": "src/index.js",
            "line": 403,
            "description": "Adding transport on logger module",
            "itemtype": "method",
            "name": "addDailyRotateTransport",
            "params": [
                {
                    "name": "path",
                    "description": "path to use",
                    "type": "String"
                },
                {
                    "name": "filename",
                    "description": "filename to use",
                    "type": "String"
                },
                {
                    "name": "override",
                    "description": "options on daily rotate",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "callback function to use if is set",
                    "type": "Function"
                }
            ],
            "class": "Logger"
        },
        {
            "file": "src/index.js",
            "line": 496,
            "description": "Default process function, get the current level and log our own message and metdata",
            "itemtype": "method",
            "name": "process",
            "params": [
                {
                    "name": "level",
                    "description": "level to use on current log level",
                    "type": "Integer"
                },
                {
                    "name": "message",
                    "description": "default message to display",
                    "type": "Mixed"
                },
                {
                    "name": "meta",
                    "description": "default meta to send on logger",
                    "type": "Mixed"
                }
            ],
            "class": "Logger"
        },
        {
            "file": "src/index.js",
            "line": 546,
            "description": "Log message and metadata with the current verbose level",
            "itemtype": "method",
            "name": "verbose",
            "params": [
                {
                    "name": "message",
                    "description": "message to send on logger",
                    "type": "String"
                },
                {
                    "name": "meta",
                    "description": "metadata to send on logger",
                    "type": "Object"
                }
            ],
            "class": "Logger"
        },
        {
            "file": "src/index.js",
            "line": 558,
            "description": "Log message and metadata with the current info level",
            "itemtype": "method",
            "name": "info",
            "params": [
                {
                    "name": "message",
                    "description": "message to send on logger",
                    "type": "String"
                },
                {
                    "name": "meta",
                    "description": "metadata to send on logger",
                    "type": "Object"
                }
            ],
            "class": "Logger"
        },
        {
            "file": "src/index.js",
            "line": 570,
            "description": "Log message and metadata with the current warning level",
            "itemtype": "method",
            "name": "warning",
            "params": [
                {
                    "name": "message",
                    "description": "message to send on logger",
                    "type": "String"
                },
                {
                    "name": "meta",
                    "description": "metadata to send on logger",
                    "type": "Object"
                }
            ],
            "class": "Logger"
        },
        {
            "file": "src/index.js",
            "line": 582,
            "description": "Log message and metadata with the current error level",
            "itemtype": "method",
            "name": "error",
            "params": [
                {
                    "name": "message",
                    "description": "message to send on logger",
                    "type": "String"
                },
                {
                    "name": "meta",
                    "description": "metadata to send on logger",
                    "type": "Object"
                }
            ],
            "class": "Logger"
        },
        {
            "file": "src/index.js",
            "line": 594,
            "description": "Log message and metadata with the current debug level",
            "itemtype": "method",
            "name": "debug",
            "params": [
                {
                    "name": "message",
                    "description": "message to send on logger",
                    "type": "String"
                },
                {
                    "name": "meta",
                    "description": "metadata to send on logger",
                    "type": "Object"
                }
            ],
            "class": "Logger"
        },
        {
            "file": "src/index.js",
            "line": 606,
            "description": "Log a banner message on console",
            "itemtype": "method",
            "name": "banner",
            "params": [
                {
                    "name": "message",
                    "description": "message to send on logger",
                    "type": "String"
                },
                {
                    "name": "cstyle",
                    "description": "style to use on banner based on chalk rules",
                    "type": "Object"
                }
            ],
            "example": [
                "\n\n     // eample with custom style\n     instance.banner('test message', { color : 'white', bgColor : 'bgRed' });\n     // This will display \"test message\" with bgRed and white text \n "
            ],
            "class": "Logger"
        },
        {
            "file": "src/index.js",
            "line": 660,
            "description": "Export current logger to use it on node",
            "class": "Logger"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: date",
            "line": " src/index.js:20"
        },
        {
            "message": "unknown tag: copyright",
            "line": " src/index.js:20"
        },
        {
            "message": "Missing item type\nWrapper function to enable log on console",
            "line": " src/index.js:331"
        },
        {
            "message": "Missing item type\nWrapper function to disable log on console",
            "line": " src/index.js:357"
        },
        {
            "message": "Missing item type\nSuccess function for emit event. catch all success for call process",
            "line": " src/index.js:368"
        },
        {
            "message": "Missing item type\nSuccess function for emit event. catch all failure for call process",
            "line": " src/index.js:386"
        },
        {
            "message": "Missing item type\nExport current logger to use it on node",
            "line": " src/index.js:660"
        }
    ]
}